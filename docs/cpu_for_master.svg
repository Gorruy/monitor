<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="486" onload="init(evt)" viewBox="0 0 1200 486" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="486.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >CPU Time Flame Graph</text>
<text id="details" x="10.00" y="469" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="469" > </text>
<g id="frames">
<g >
<title>__x64_sys_mq_timedreceive (75,171,810,419 samples, 10.69%)</title><rect x="815.3" y="341" width="126.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="818.30" y="351.5" >__x64_sys_mq_ti..</text>
</g>
<g >
<title>tick_sched_timer (70,513,338 samples, 0.01%)</title><rect x="486.3" y="181" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="489.26" y="191.5" ></text>
</g>
<g >
<title>packet_recvmsg (7,161,904,930 samples, 1.02%)</title><rect x="112.1" y="325" width="12.0" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="115.12" y="335.5" ></text>
</g>
<g >
<title>amd_pmu_disable_all (138,283,802 samples, 0.02%)</title><rect x="1035.9" y="229" width="0.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1038.85" y="239.5" ></text>
</g>
<g >
<title>__sys_recvfrom (248,265,433,886 samples, 35.29%)</title><rect x="89.5" y="341" width="416.5" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="92.49" y="351.5" >__sys_recvfrom</text>
</g>
<g >
<title>aa_label_next_confined (1,593,253,675 samples, 0.23%)</title><rect x="443.5" y="245" width="2.7" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="446.52" y="255.5" ></text>
</g>
<g >
<title>aa_apply_modes_to_perms (793,956,240 samples, 0.11%)</title><rect x="456.5" y="229" width="1.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="459.53" y="239.5" ></text>
</g>
<g >
<title>__put_page (7,148,280,075 samples, 1.02%)</title><rect x="332.3" y="229" width="12.0" height="15.0" fill="rgb(225,96,22)" rx="2" ry="2" />
<text  x="335.27" y="239.5" ></text>
</g>
<g >
<title>irq_exit_rcu (70,782,319 samples, 0.01%)</title><rect x="932.0" y="277" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="935.03" y="287.5" ></text>
</g>
<g >
<title>sniffer (703,432,788,546 samples, 100.00%)</title><rect x="10.0" y="421" width="1180.0" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="13.00" y="431.5" >sniffer</text>
</g>
<g >
<title>exit_to_user_mode_prepare (900,943,582 samples, 0.13%)</title><rect x="946.0" y="341" width="1.5" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="949.03" y="351.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (70,844,574 samples, 0.01%)</title><rect x="24.6" y="341" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="27.59" y="351.5" ></text>
</g>
<g >
<title>__pthread_enable_asynccancel (2,324,119,463 samples, 0.33%)</title><rect x="1147.5" y="389" width="3.9" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="1150.53" y="399.5" ></text>
</g>
<g >
<title>__skb_try_recv_datagram (506,900,022 samples, 0.07%)</title><rect x="382.8" y="277" width="0.8" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="385.78" y="287.5" ></text>
</g>
<g >
<title>__free_one_page (63,600,076 samples, 0.01%)</title><rect x="339.3" y="149" width="0.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="342.30" y="159.5" ></text>
</g>
<g >
<title>__libc_recvfrom (330,635,264,594 samples, 47.00%)</title><rect x="10.0" y="405" width="554.6" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="13.00" y="415.5" >__libc_recvfrom</text>
</g>
<g >
<title>kfree_skbmem (2,152,131,462 samples, 0.31%)</title><rect x="326.9" y="261" width="3.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="329.88" y="271.5" ></text>
</g>
<g >
<title>aa_profile_af_perm (23,782,362,917 samples, 3.38%)</title><rect x="446.2" y="245" width="39.9" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="449.19" y="255.5" >aa_..</text>
</g>
<g >
<title>__skb_datagram_iter (104,989,179,200 samples, 14.93%)</title><rect x="150.5" y="277" width="176.1" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="153.53" y="287.5" >__skb_datagram_iter</text>
</g>
<g >
<title>syscall_exit_to_user_mode (48,679,832,286 samples, 6.92%)</title><rect x="956.5" y="341" width="81.6" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="959.47" y="351.5" >syscall_e..</text>
</g>
<g >
<title>PageHuge (105,057,279 samples, 0.01%)</title><rect x="332.4" y="213" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="335.44" y="223.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (38,465,499,542 samples, 5.47%)</title><rect x="971.6" y="325" width="64.5" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="974.56" y="335.5" >exit_to..</text>
</g>
<g >
<title>fput_many (2,636,081,524 samples, 0.37%)</title><rect x="932.1" y="309" width="4.5" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="935.14" y="319.5" ></text>
</g>
<g >
<title>__librt_enable_asynccancel (6,999,397,034 samples, 1.00%)</title><rect x="1135.8" y="389" width="11.7" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1138.79" y="399.5" ></text>
</g>
<g >
<title>cpuacct_charge (69,590,684 samples, 0.01%)</title><rect x="325.4" y="37" width="0.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="328.40" y="47.5" ></text>
</g>
<g >
<title>entry_untrain_ret (515,337,438 samples, 0.07%)</title><rect x="1055.7" y="373" width="0.9" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1058.74" y="383.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (3,671,418,174 samples, 0.52%)</title><rect x="1038.1" y="357" width="6.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1041.13" y="367.5" ></text>
</g>
<g >
<title>__slab_free (1,168,281,158 samples, 0.17%)</title><rect x="328.5" y="229" width="2.0" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="331.53" y="239.5" ></text>
</g>
<g >
<title>__cond_resched (594,653,903 samples, 0.08%)</title><rect x="387.5" y="277" width="1.0" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="390.45" y="287.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (133,008,724 samples, 0.02%)</title><rect x="514.3" y="309" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="517.27" y="319.5" ></text>
</g>
<g >
<title>tick_sched_handle.isra.0 (97,973,907 samples, 0.01%)</title><rect x="514.3" y="245" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="517.33" y="255.5" ></text>
</g>
<g >
<title>srso_safe_ret (23,254,731,192 samples, 3.31%)</title><rect x="1056.6" y="373" width="39.0" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1059.60" y="383.5" >srs..</text>
</g>
<g >
<title>__pthread_disable_asynccancel (2,432,019,340 samples, 0.35%)</title><rect x="564.6" y="405" width="4.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="567.64" y="415.5" ></text>
</g>
<g >
<title>__virt_addr_valid (1,085,553,380 samples, 0.15%)</title><rect x="159.6" y="229" width="1.9" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="162.63" y="239.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (1,763,348,915 samples, 0.25%)</title><rect x="511.6" y="357" width="3.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="514.64" y="367.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (169,867,278 samples, 0.02%)</title><rect x="956.1" y="325" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="959.12" y="335.5" ></text>
</g>
<g >
<title>entry_untrain_ret (368,610,433 samples, 0.05%)</title><rect x="548.0" y="389" width="0.6" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="551.03" y="399.5" ></text>
</g>
<g >
<title>update_curr (69,590,684 samples, 0.01%)</title><rect x="325.4" y="53" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="328.40" y="63.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (70,844,574 samples, 0.01%)</title><rect x="24.6" y="373" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="27.59" y="383.5" ></text>
</g>
<g >
<title>skb_recv_datagram (396,705,995 samples, 0.06%)</title><rect x="487.0" y="309" width="0.7" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="490.03" y="319.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (16,210,539,548 samples, 2.30%)</title><rect x="33.9" y="389" width="27.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="36.86" y="399.5" >e..</text>
</g>
<g >
<title>fput_many (2,047,017,659 samples, 0.29%)</title><rect x="103.8" y="325" width="3.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="106.75" y="335.5" ></text>
</g>
<g >
<title>skb_release_data (9,993,493,326 samples, 1.42%)</title><rect x="331.0" y="245" width="16.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="334.01" y="255.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (134,527,994 samples, 0.02%)</title><rect x="956.1" y="277" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="959.12" y="287.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (70,496,577 samples, 0.01%)</title><rect x="802.7" y="277" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="805.73" y="287.5" ></text>
</g>
<g >
<title>aa_profile_af_perm (104,485,150 samples, 0.01%)</title><rect x="486.1" y="261" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="489.09" y="271.5" ></text>
</g>
<g >
<title>sniff (7,153,888,727 samples, 1.02%)</title><rect x="1178.0" y="389" width="12.0" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="1181.00" y="399.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (106,017,246 samples, 0.02%)</title><rect x="932.0" y="293" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="934.97" y="303.5" ></text>
</g>
<g >
<title>aa_compute_perms (4,514,143,899 samples, 0.64%)</title><rect x="435.4" y="245" width="7.6" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="438.43" y="255.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (16,553,011,026 samples, 2.35%)</title><rect x="514.6" y="357" width="27.8" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="517.60" y="367.5" >s..</text>
</g>
<g >
<title>amd_pmu_disable_all (70,496,577 samples, 0.01%)</title><rect x="802.7" y="149" width="0.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="805.73" y="159.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (99,205,489 samples, 0.01%)</title><rect x="956.1" y="261" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="959.12" y="271.5" ></text>
</g>
<g >
<title>tick_sched_handle.isra.0 (64,786,347 samples, 0.01%)</title><rect x="956.2" y="229" width="0.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="959.18" y="239.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (50,115,743,316 samples, 7.12%)</title><rect x="659.3" y="373" width="84.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="662.32" y="383.5" >entry_SYS..</text>
</g>
<g >
<title>consume_skb (13,409,942,612 samples, 1.91%)</title><rect x="326.8" y="277" width="22.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="329.82" y="287.5" >c..</text>
</g>
<g >
<title>__hrtimer_run_queues (70,513,338 samples, 0.01%)</title><rect x="486.3" y="197" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="489.26" y="207.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (10,883,741,826 samples, 1.55%)</title><rect x="487.7" y="325" width="18.3" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="490.70" y="335.5" ></text>
</g>
<g >
<title>all (703,432,788,657 samples, 100%)</title><rect x="10.0" y="437" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="447.5" ></text>
</g>
<g >
<title>do_syscall_64 (5,453,651,553 samples, 0.78%)</title><rect x="24.7" y="389" width="9.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="27.71" y="399.5" ></text>
</g>
<g >
<title>free_unref_page_prepare.part.0 (69,251,032 samples, 0.01%)</title><rect x="343.3" y="181" width="0.1" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="346.30" y="191.5" ></text>
</g>
<g >
<title>scheduler_tick (70,496,577 samples, 0.01%)</title><rect x="802.7" y="213" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="805.73" y="223.5" ></text>
</g>
<g >
<title>simple_copy_to_iter (104,194,447 samples, 0.01%)</title><rect x="326.6" y="277" width="0.2" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="329.65" y="287.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_rax (549,071,584 samples, 0.08%)</title><rect x="127.5" y="309" width="0.9" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="130.47" y="319.5" ></text>
</g>
<g >
<title>__skb_try_recv_datagram (14,084,262,960 samples, 2.00%)</title><rect x="358.1" y="261" width="23.6" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="361.07" y="271.5" >_..</text>
</g>
<g >
<title>scheduler_tick (104,439,850 samples, 0.01%)</title><rect x="325.3" y="85" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="328.34" y="95.5" ></text>
</g>
<g >
<title>do_syscall_64 (15,412,952,211 samples, 2.19%)</title><rect x="633.5" y="373" width="25.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="636.46" y="383.5" >d..</text>
</g>
<g >
<title>packet_recvmsg (144,837,237,209 samples, 20.59%)</title><rect x="140.7" y="309" width="242.9" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="143.66" y="319.5" >packet_recvmsg</text>
</g>
<g >
<title>amd_clear_divider (170,237,937 samples, 0.02%)</title><rect x="511.0" y="357" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="513.96" y="367.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (70,496,577 samples, 0.01%)</title><rect x="802.7" y="293" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="805.73" y="303.5" ></text>
</g>
<g >
<title>aa_check_perms (1,964,384,737 samples, 0.28%)</title><rect x="457.9" y="229" width="3.3" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="460.86" y="239.5" ></text>
</g>
<g >
<title>tick_sched_timer (70,496,577 samples, 0.01%)</title><rect x="802.7" y="261" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="805.73" y="271.5" ></text>
</g>
<g >
<title>__librt_disable_asynccancel (7,535,604,572 samples, 1.07%)</title><rect x="1123.1" y="389" width="12.7" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1126.15" y="399.5" ></text>
</g>
<g >
<title>__get_user_4 (1,544,351,015 samples, 0.22%)</title><rect x="99.1" y="325" width="2.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="102.10" y="335.5" ></text>
</g>
<g >
<title>update_process_times (64,786,347 samples, 0.01%)</title><rect x="956.2" y="213" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="959.18" y="223.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (414,980,053 samples, 0.06%)</title><rect x="540.6" y="325" width="0.7" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="543.64" y="335.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (4,926,519,994 samples, 0.70%)</title><rect x="373.3" y="245" width="8.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="376.25" y="255.5" ></text>
</g>
<g >
<title>update_process_times (70,496,577 samples, 0.01%)</title><rect x="802.7" y="229" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="805.73" y="239.5" ></text>
</g>
<g >
<title>__put_compound_page (104,209,603 samples, 0.01%)</title><rect x="332.1" y="229" width="0.2" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="335.09" y="239.5" ></text>
</g>
<g >
<title>import_single_range (1,645,594,725 samples, 0.23%)</title><rect x="506.4" y="341" width="2.8" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="509.41" y="351.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (134,527,994 samples, 0.02%)</title><rect x="956.1" y="293" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="959.12" y="303.5" ></text>
</g>
<g >
<title>__page_cache_release (104,174,925 samples, 0.01%)</title><rect x="332.6" y="213" width="0.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="335.62" y="223.5" ></text>
</g>
<g >
<title>__libc_recvfrom (3,559,336,983 samples, 0.51%)</title><rect x="1117.2" y="389" width="5.9" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="1120.18" y="399.5" ></text>
</g>
<g >
<title>do_mq_timedreceive (899,754,645 samples, 0.13%)</title><rect x="944.5" y="341" width="1.5" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="947.52" y="351.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (61,419,460 samples, 0.01%)</title><rect x="485.9" y="133" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="488.87" y="143.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (70,496,577 samples, 0.01%)</title><rect x="802.7" y="309" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="805.73" y="319.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (722,256,517 samples, 0.10%)</title><rect x="928.9" y="293" width="1.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="931.87" y="303.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (70,513,338 samples, 0.01%)</title><rect x="486.3" y="213" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="489.26" y="223.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (70,844,574 samples, 0.01%)</title><rect x="24.6" y="357" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="27.59" y="367.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_rax (70,559,029 samples, 0.01%)</title><rect x="330.8" y="245" width="0.2" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="333.83" y="255.5" ></text>
</g>
<g >
<title>perf_pmu_disable.part.0 (138,283,802 samples, 0.02%)</title><rect x="1035.9" y="261" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1038.85" y="271.5" ></text>
</g>
<g >
<title>task_tick_fair (69,590,684 samples, 0.01%)</title><rect x="325.4" y="69" width="0.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="328.40" y="79.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (726,735,925 samples, 0.10%)</title><rect x="509.7" y="341" width="1.3" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="512.74" y="351.5" ></text>
</g>
<g >
<title>_copy_to_user (97,925,645 samples, 0.01%)</title><rect x="108.2" y="309" width="0.1" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="111.15" y="319.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (5,322,860,825 samples, 0.76%)</title><rect x="947.5" y="341" width="9.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="950.54" y="351.5" ></text>
</g>
<g >
<title>__fget_light (24,860,314,536 samples, 3.53%)</title><rect x="887.2" y="293" width="41.7" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="890.16" y="303.5" >__f..</text>
</g>
<g >
<title>tick_sched_timer (131,169,707 samples, 0.02%)</title><rect x="325.3" y="133" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="328.29" y="143.5" ></text>
</g>
<g >
<title>srso_safe_ret (8,235,252,638 samples, 1.17%)</title><rect x="548.6" y="389" width="13.9" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="551.65" y="399.5" ></text>
</g>
<g >
<title>skb_release_head_state (105,669,760 samples, 0.02%)</title><rect x="347.8" y="245" width="0.1" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="350.77" y="255.5" ></text>
</g>
<g >
<title>__skb_try_recv_from_queue (2,922,561,657 samples, 0.42%)</title><rect x="368.4" y="245" width="4.9" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="371.35" y="255.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (133,008,724 samples, 0.02%)</title><rect x="514.3" y="293" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="517.27" y="303.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (70,782,319 samples, 0.01%)</title><rect x="932.0" y="261" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="935.03" y="271.5" ></text>
</g>
<g >
<title>__free_one_page (1,375,543,295 samples, 0.20%)</title><rect x="340.8" y="133" width="2.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="343.75" y="143.5" ></text>
</g>
<g >
<title>copyout (542,691,030 samples, 0.08%)</title><rect x="325.5" y="229" width="0.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="328.51" y="239.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (437,332,025 samples, 0.06%)</title><rect x="1044.3" y="357" width="0.7" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="1047.29" y="367.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (579,211,265 samples, 0.08%)</title><rect x="541.4" y="341" width="1.0" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="544.40" y="351.5" ></text>
</g>
<g >
<title>simple_copy_to_iter (103,207,216,799 samples, 14.67%)</title><rect x="153.5" y="261" width="173.1" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="156.52" y="271.5" >simple_copy_to_iter</text>
</g>
<g >
<title>__errno_location (7,605,912,643 samples, 1.08%)</title><rect x="1104.4" y="389" width="12.8" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1107.42" y="399.5" ></text>
</g>
<g >
<title>perf_pmu_disable.part.0 (62,409,597 samples, 0.01%)</title><rect x="514.3" y="181" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="517.33" y="191.5" ></text>
</g>
<g >
<title>x86_pmu_disable_all (67,903,424 samples, 0.01%)</title><rect x="1036.0" y="213" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1038.97" y="223.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (1,061,522,562 samples, 0.15%)</title><rect x="1034.1" y="309" width="1.8" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1037.07" y="319.5" ></text>
</g>
<g >
<title>scheduler_tick (70,513,338 samples, 0.01%)</title><rect x="486.3" y="133" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="489.26" y="143.5" ></text>
</g>
<g >
<title>update_process_times (70,513,338 samples, 0.01%)</title><rect x="486.3" y="149" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="489.26" y="159.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (645,124,656 samples, 0.09%)</title><rect x="381.7" y="261" width="1.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="384.69" y="271.5" ></text>
</g>
<g >
<title>check_stack_object (70,753,733 samples, 0.01%)</title><rect x="108.3" y="309" width="0.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="111.32" y="319.5" ></text>
</g>
<g >
<title>__fget_light (8,298,826,081 samples, 1.18%)</title><rect x="489.1" y="293" width="13.9" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="492.09" y="303.5" ></text>
</g>
<g >
<title>__fget_light (1,512,227,642 samples, 0.21%)</title><rect x="503.4" y="309" width="2.6" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="506.42" y="319.5" ></text>
</g>
<g >
<title>aa_dfa_match_len (312,456,052 samples, 0.04%)</title><rect x="443.0" y="245" width="0.5" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="446.00" y="255.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (105,549,095 samples, 0.02%)</title><rect x="1151.4" y="389" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1154.43" y="399.5" ></text>
</g>
<g >
<title>skb_release_all (11,050,214,956 samples, 1.57%)</title><rect x="330.6" y="261" width="18.5" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="333.61" y="271.5" ></text>
</g>
<g >
<title>__common_interrupt (61,419,460 samples, 0.01%)</title><rect x="485.9" y="181" width="0.1" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="488.87" y="191.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_rax (104,098,758 samples, 0.01%)</title><rect x="103.5" y="325" width="0.1" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="106.47" y="335.5" ></text>
</g>
<g >
<title>fput (909,863,079 samples, 0.13%)</title><rect x="939.0" y="325" width="1.5" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="941.99" y="335.5" ></text>
</g>
<g >
<title>__fdget (443,644,249 samples, 0.06%)</title><rect x="98.4" y="325" width="0.7" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="101.35" y="335.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (131,169,707 samples, 0.02%)</title><rect x="325.3" y="197" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="328.29" y="207.5" ></text>
</g>
<g >
<title>skb_recv_datagram (20,345,517,607 samples, 2.89%)</title><rect x="349.5" y="293" width="34.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="352.50" y="303.5" >sk..</text>
</g>
<g >
<title>__skb_recv_datagram (17,642,363,438 samples, 2.51%)</title><rect x="353.2" y="277" width="29.6" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="356.18" y="287.5" >__..</text>
</g>
<g >
<title>__hrtimer_run_queues (133,008,724 samples, 0.02%)</title><rect x="514.3" y="277" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="517.27" y="287.5" ></text>
</g>
<g >
<title>skb_release_all (70,535,407 samples, 0.01%)</title><rect x="349.4" y="277" width="0.1" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="352.38" y="287.5" ></text>
</g>
<g >
<title>__x64_sys_recvfrom (9,094,310,057 samples, 1.29%)</title><rect x="68.2" y="373" width="15.3" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="71.23" y="383.5" ></text>
</g>
<g >
<title>free_pcp_prepare (2,271,145,529 samples, 0.32%)</title><rect x="335.0" y="165" width="3.8" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="338.03" y="175.5" ></text>
</g>
<g >
<title>aa_apply_modes_to_perms (239,202,137 samples, 0.03%)</title><rect x="435.0" y="245" width="0.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="437.96" y="255.5" ></text>
</g>
<g >
<title>__cond_resched (310,988,160 samples, 0.04%)</title><rect x="400.7" y="261" width="0.5" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="403.69" y="271.5" ></text>
</g>
<g >
<title>__slab_free (1,264,755,864 samples, 0.18%)</title><rect x="345.7" y="197" width="2.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="348.65" y="207.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_safe_stack (1,684,384,928 samples, 0.24%)</title><rect x="545.2" y="389" width="2.8" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="548.21" y="399.5" ></text>
</g>
<g >
<title>free_unref_page (5,447,062,356 samples, 0.77%)</title><rect x="334.2" y="181" width="9.1" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="337.16" y="191.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (1,295,542,874 samples, 0.18%)</title><rect x="562.5" y="389" width="2.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="565.46" y="399.5" ></text>
</g>
<g >
<title>free_compound_page (436,245,684 samples, 0.06%)</title><rect x="343.5" y="213" width="0.8" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="346.53" y="223.5" ></text>
</g>
<g >
<title>tick_sched_handle.isra.0 (70,496,577 samples, 0.01%)</title><rect x="802.7" y="245" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="805.73" y="255.5" ></text>
</g>
<g >
<title>__x64_sys_recvfrom (251,388,632,179 samples, 35.74%)</title><rect x="89.3" y="357" width="421.7" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="92.26" y="367.5" >__x64_sys_recvfrom</text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (70,326,896 samples, 0.01%)</title><rect x="381.6" y="245" width="0.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="384.58" y="255.5" ></text>
</g>
<g >
<title>__skb_recv_datagram (231,407,217 samples, 0.03%)</title><rect x="149.9" y="293" width="0.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="152.85" y="303.5" ></text>
</g>
<g >
<title>do_syscall_64 (273,027,735,944 samples, 38.81%)</title><rect x="84.4" y="373" width="458.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="87.37" y="383.5" >do_syscall_64</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (168,266,575 samples, 0.02%)</title><rect x="514.3" y="325" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="517.27" y="335.5" ></text>
</g>
<g >
<title>copy_user_generic_string (96,419,254,471 samples, 13.71%)</title><rect x="163.8" y="229" width="161.7" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="166.77" y="239.5" >copy_user_generic_st..</text>
</g>
<g >
<title>handle_edge_irq (61,419,460 samples, 0.01%)</title><rect x="485.9" y="165" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="488.87" y="175.5" ></text>
</g>
<g >
<title>skb_release_head_state (68,001,961 samples, 0.01%)</title><rect x="349.2" y="261" width="0.1" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="352.21" y="271.5" ></text>
</g>
<g >
<title>free_unref_page_prepare.part.0 (140,885,192 samples, 0.02%)</title><rect x="343.1" y="165" width="0.2" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="346.06" y="175.5" ></text>
</g>
<g >
<title>tick_sched_handle.isra.0 (70,513,338 samples, 0.01%)</title><rect x="486.3" y="165" width="0.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="489.26" y="175.5" ></text>
</g>
<g >
<title>amd_pmu_disable_all (62,409,597 samples, 0.01%)</title><rect x="514.3" y="149" width="0.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="517.33" y="159.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (105,644,140 samples, 0.02%)</title><rect x="24.5" y="389" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="27.54" y="399.5" ></text>
</g>
<g >
<title>__check_heap_object (343,819,950 samples, 0.05%)</title><rect x="159.1" y="229" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="162.05" y="239.5" ></text>
</g>
<g >
<title>update_process_times (97,973,907 samples, 0.01%)</title><rect x="514.3" y="229" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="517.33" y="239.5" ></text>
</g>
<g >
<title>__mem_cgroup_uncharge (138,638,580 samples, 0.02%)</title><rect x="333.9" y="181" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="336.87" y="191.5" ></text>
</g>
<g >
<title>__put_page (97,472,816 samples, 0.01%)</title><rect x="330.7" y="245" width="0.1" height="15.0" fill="rgb(225,96,22)" rx="2" ry="2" />
<text  x="333.67" y="255.5" ></text>
</g>
<g >
<title>aa_dfa_match_len (13,479,148,286 samples, 1.92%)</title><rect x="463.4" y="229" width="22.6" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="466.42" y="239.5" >a..</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (131,169,707 samples, 0.02%)</title><rect x="325.3" y="213" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="328.29" y="223.5" ></text>
</g>
<g >
<title>kfree (1,444,535,088 samples, 0.21%)</title><rect x="936.6" y="309" width="2.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="939.57" y="319.5" ></text>
</g>
<g >
<title>run_timer_softirq (70,782,319 samples, 0.01%)</title><rect x="932.0" y="245" width="0.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="935.03" y="255.5" ></text>
</g>
<g >
<title>__check_object_size (4,512,925,176 samples, 0.64%)</title><rect x="154.0" y="245" width="7.6" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="156.98" y="255.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_rax (631,077,596 samples, 0.09%)</title><rect x="802.9" y="357" width="1.0" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="805.85" y="367.5" ></text>
</g>
<g >
<title>sock_rfree (713,143,330 samples, 0.10%)</title><rect x="347.9" y="245" width="1.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="350.95" y="255.5" ></text>
</g>
<g >
<title>tick_sched_timer (99,205,489 samples, 0.01%)</title><rect x="956.1" y="245" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="959.12" y="255.5" ></text>
</g>
<g >
<title>free_unref_page_commit.isra.0 (2,514,521,375 samples, 0.36%)</title><rect x="338.8" y="165" width="4.3" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="341.84" y="175.5" ></text>
</g>
<g >
<title>__put_user_nocheck_4 (1,060,140,095 samples, 0.15%)</title><rect x="101.7" y="325" width="1.8" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="104.69" y="335.5" ></text>
</g>
<g >
<title>__virt_addr_valid (70,730,027 samples, 0.01%)</title><rect x="161.6" y="245" width="0.1" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="164.55" y="255.5" ></text>
</g>
<g >
<title>update_process_times (131,169,707 samples, 0.02%)</title><rect x="325.3" y="101" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="328.29" y="111.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (131,169,707 samples, 0.02%)</title><rect x="325.3" y="149" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="328.29" y="159.5" ></text>
</g>
<g >
<title>kmem_cache_free (68,954,102 samples, 0.01%)</title><rect x="330.5" y="261" width="0.1" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="333.49" y="271.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (131,169,707 samples, 0.02%)</title><rect x="325.3" y="181" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="328.29" y="191.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (70,496,577 samples, 0.01%)</title><rect x="802.7" y="341" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="805.73" y="351.5" ></text>
</g>
<g >
<title>rcu_all_qs (387,141,006 samples, 0.06%)</title><rect x="486.4" y="261" width="0.6" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="489.38" y="271.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (70,513,338 samples, 0.01%)</title><rect x="486.3" y="229" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="489.26" y="239.5" ></text>
</g>
<g >
<title>aa_label_sk_perm.part.0 (729,982,350 samples, 0.10%)</title><rect x="388.5" y="277" width="1.2" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="391.45" y="287.5" ></text>
</g>
<g >
<title>__sys_recvfrom (487,263,214 samples, 0.07%)</title><rect x="88.4" y="357" width="0.9" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="91.44" y="367.5" ></text>
</g>
<g >
<title>copy_user_generic_string (2,195,894,454 samples, 0.31%)</title><rect x="108.4" y="309" width="3.7" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="111.44" y="319.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_rax (315,677,430 samples, 0.04%)</title><rect x="83.5" y="373" width="0.5" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="86.48" y="383.5" ></text>
</g>
<g >
<title>__fdget (25,582,571,053 samples, 3.64%)</title><rect x="887.2" y="309" width="42.9" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="890.16" y="319.5" >__fd..</text>
</g>
<g >
<title>__fdget (8,540,251,210 samples, 1.21%)</title><rect x="489.1" y="309" width="14.3" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="492.09" y="319.5" ></text>
</g>
<g >
<title>amd_clear_divider (1,822,514,747 samples, 0.26%)</title><rect x="941.4" y="341" width="3.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="944.40" y="351.5" ></text>
</g>
<g >
<title>__x64_sys_mq_timedreceive (20,585,295,933 samples, 2.93%)</title><rect x="768.3" y="357" width="34.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="771.32" y="367.5" >__..</text>
</g>
<g >
<title>skb_free_datagram (13,515,679,531 samples, 1.92%)</title><rect x="326.8" y="293" width="22.7" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="329.82" y="303.5" >s..</text>
</g>
<g >
<title>fput (270,544,626 samples, 0.04%)</title><rect x="506.0" y="341" width="0.4" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="508.95" y="351.5" ></text>
</g>
<g >
<title>scheduler_tick (64,786,347 samples, 0.01%)</title><rect x="956.2" y="197" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="959.18" y="207.5" ></text>
</g>
<g >
<title>kfree (2,024,294,673 samples, 0.29%)</title><rect x="344.4" y="213" width="3.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="347.38" y="223.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (5,248,959,049 samples, 0.75%)</title><rect x="1095.6" y="373" width="8.8" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1098.61" y="383.5" ></text>
</g>
<g >
<title>check_stack_object (96,282,232 samples, 0.01%)</title><rect x="108.0" y="293" width="0.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="110.99" y="303.5" ></text>
</g>
<g >
<title>_raw_spin_lock (20,827,903,806 samples, 2.96%)</title><rect x="827.9" y="325" width="34.9" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="830.86" y="335.5" >_r..</text>
</g>
<g >
<title>__x86_return_thunk (635,297,033 samples, 0.09%)</title><rect x="803.9" y="357" width="1.1" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="806.91" y="367.5" ></text>
</g>
<g >
<title>mq_receive (98,395,473 samples, 0.01%)</title><rect x="1152.1" y="389" width="0.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1155.07" y="399.5" ></text>
</g>
<g >
<title>__put_compound_page (6,368,278,092 samples, 0.91%)</title><rect x="332.8" y="213" width="10.7" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="335.79" y="223.5" ></text>
</g>
<g >
<title>__page_cache_release (200,795,841 samples, 0.03%)</title><rect x="333.5" y="197" width="0.4" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="336.53" y="207.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (70,513,338 samples, 0.01%)</title><rect x="486.3" y="245" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="489.26" y="255.5" ></text>
</g>
<g >
<title>free_compound_page (5,690,045,125 samples, 0.81%)</title><rect x="333.9" y="197" width="9.5" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="336.87" y="207.5" ></text>
</g>
<g >
<title>_copy_to_user (65,421,471 samples, 0.01%)</title><rect x="103.6" y="325" width="0.2" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="106.64" y="335.5" ></text>
</g>
<g >
<title>move_addr_to_user (2,942,169,184 samples, 0.42%)</title><rect x="107.2" y="325" width="4.9" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="110.19" y="335.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (105,602,502 samples, 0.02%)</title><rect x="633.3" y="373" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="636.28" y="383.5" ></text>
</g>
<g >
<title>__fget_light (1,126,923,087 samples, 0.16%)</title><rect x="930.1" y="309" width="1.9" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="933.08" y="319.5" ></text>
</g>
<g >
<title>perf_event_task_tick (62,409,597 samples, 0.01%)</title><rect x="514.3" y="197" width="0.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="517.33" y="207.5" ></text>
</g>
<g >
<title>aa_sk_perm (58,037,280,335 samples, 8.25%)</title><rect x="389.7" y="277" width="97.3" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="392.68" y="287.5" >aa_sk_perm</text>
</g>
<g >
<title>syscall_exit_to_user_mode (752,500,743 samples, 0.11%)</title><rect x="543.9" y="373" width="1.3" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="546.94" y="383.5" ></text>
</g>
<g >
<title>send_data_to_representer (15,359,976,352 samples, 2.18%)</title><rect x="1152.2" y="389" width="25.8" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1155.23" y="399.5" >s..</text>
</g>
<g >
<title>apparmor_socket_recvmsg (59,714,336,911 samples, 8.49%)</title><rect x="386.9" y="293" width="100.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="389.86" y="303.5" >apparmor_soc..</text>
</g>
<g >
<title>fpregs_assert_state_consistent (1,216,256,152 samples, 0.17%)</title><rect x="1036.1" y="325" width="2.0" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1039.09" y="335.5" ></text>
</g>
<g >
<title>security_socket_recvmsg (61,643,309,116 samples, 8.76%)</title><rect x="383.6" y="309" width="103.4" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="386.63" y="319.5" >security_soc..</text>
</g>
<g >
<title>perf_event_task_tick (64,786,347 samples, 0.01%)</title><rect x="956.2" y="181" width="0.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="959.18" y="191.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_out (138,283,802 samples, 0.02%)</title><rect x="1035.9" y="277" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1038.85" y="287.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (168,266,575 samples, 0.02%)</title><rect x="514.3" y="341" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="517.27" y="351.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (288,616,820,692 samples, 41.03%)</title><rect x="61.1" y="389" width="484.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="64.05" y="399.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>syscall_enter_from_user_mode (938,593,802 samples, 0.13%)</title><rect x="542.4" y="373" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="545.37" y="383.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (14,072,655,483 samples, 2.00%)</title><rect x="517.8" y="341" width="23.6" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="520.79" y="351.5" >e..</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (70,513,338 samples, 0.01%)</title><rect x="486.3" y="261" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="489.26" y="271.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (179,812,707,639 samples, 25.56%)</title><rect x="743.4" y="373" width="301.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="746.39" y="383.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>aa_sk_perm (403,329,513 samples, 0.06%)</title><rect x="386.2" y="293" width="0.7" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="389.19" y="303.5" ></text>
</g>
<g >
<title>__mod_zone_page_state (316,908,261 samples, 0.05%)</title><rect x="342.5" y="117" width="0.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="345.53" y="127.5" ></text>
</g>
<g >
<title>__x86_return_thunk (210,819,836 samples, 0.03%)</title><rect x="84.0" y="373" width="0.4" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="87.01" y="383.5" ></text>
</g>
<g >
<title>x86_pmu_disable (70,496,577 samples, 0.01%)</title><rect x="802.7" y="165" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="805.73" y="175.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock (275,243,287 samples, 0.04%)</title><rect x="1151.6" y="389" width="0.5" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1154.61" y="399.5" ></text>
</g>
<g >
<title>__GI___mq_timedreceive (313,811,272,460 samples, 44.61%)</title><rect x="578.0" y="389" width="526.4" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="581.00" y="399.5" >__GI___mq_timedreceive</text>
</g>
<g >
<title>_copy_to_iter (98,212,522,921 samples, 13.96%)</title><rect x="161.7" y="245" width="164.7" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="164.67" y="255.5" >_copy_to_iter</text>
</g>
<g >
<title>sock_recvmsg (312,361,308 samples, 0.04%)</title><rect x="509.2" y="341" width="0.5" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="512.22" y="351.5" ></text>
</g>
<g >
<title>handle_irq_event (61,419,460 samples, 0.01%)</title><rect x="485.9" y="149" width="0.1" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="488.87" y="159.5" ></text>
</g>
<g >
<title>call_timer_fn (70,782,319 samples, 0.01%)</title><rect x="932.0" y="229" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="935.03" y="239.5" ></text>
</g>
<g >
<title>__mem_cgroup_uncharge (105,146,554 samples, 0.01%)</title><rect x="333.4" y="197" width="0.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="336.36" y="207.5" ></text>
</g>
<g >
<title>apparmor_socket_recvmsg (7,286,400,491 samples, 1.04%)</title><rect x="128.4" y="309" width="12.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="131.39" y="319.5" ></text>
</g>
<g >
<title>kfree (526,739,413 samples, 0.07%)</title><rect x="940.5" y="325" width="0.9" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="943.52" y="335.5" ></text>
</g>
<g >
<title>kmem_cache_free (2,152,131,462 samples, 0.31%)</title><rect x="326.9" y="245" width="3.6" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="329.88" y="255.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (131,169,707 samples, 0.02%)</title><rect x="325.3" y="165" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="328.29" y="175.5" ></text>
</g>
<g >
<title>__lock_text_start (1,797,651,129 samples, 0.26%)</title><rect x="365.3" y="245" width="3.1" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="368.34" y="255.5" ></text>
</g>
<g >
<title>aa_label_sk_perm.part.0 (47,873,968,331 samples, 6.81%)</title><rect x="405.8" y="261" width="80.3" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="408.78" y="271.5" >aa_label_..</text>
</g>
<g >
<title>aa_label_next_confined (2,722,667,013 samples, 0.39%)</title><rect x="401.2" y="261" width="4.6" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="404.21" y="271.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (106,017,246 samples, 0.02%)</title><rect x="932.0" y="309" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="934.97" y="319.5" ></text>
</g>
<g >
<title>__check_object_size (128,995,253 samples, 0.02%)</title><rect x="107.9" y="309" width="0.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="110.94" y="319.5" ></text>
</g>
<g >
<title>x86_pmu_disable (138,283,802 samples, 0.02%)</title><rect x="1035.9" y="245" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1038.85" y="255.5" ></text>
</g>
<g >
<title>sock_recvmsg (216,361,216,735 samples, 30.76%)</title><rect x="124.8" y="325" width="362.9" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="127.75" y="335.5" >sock_recvmsg</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (169,867,278 samples, 0.02%)</title><rect x="956.1" y="309" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="959.12" y="319.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (234,692,267 samples, 0.03%)</title><rect x="511.2" y="357" width="0.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="514.25" y="367.5" ></text>
</g>
<g >
<title>perf_pmu_disable.part.0 (70,496,577 samples, 0.01%)</title><rect x="802.7" y="181" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="805.73" y="191.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_safe_stack (6,391,051,762 samples, 0.91%)</title><rect x="1045.0" y="373" width="10.7" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1048.02" y="383.5" ></text>
</g>
<g >
<title>check_stack_object (134,809,858 samples, 0.02%)</title><rect x="326.4" y="245" width="0.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="329.42" y="255.5" ></text>
</g>
<g >
<title>security_socket_recvmsg (369,162,667 samples, 0.05%)</title><rect x="124.1" y="325" width="0.7" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="127.13" y="335.5" ></text>
</g>
<g >
<title>asm_common_interrupt (61,419,460 samples, 0.01%)</title><rect x="485.9" y="213" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="488.87" y="223.5" ></text>
</g>
<g >
<title>perf_event_task_tick (70,496,577 samples, 0.01%)</title><rect x="802.7" y="197" width="0.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="805.73" y="207.5" ></text>
</g>
<g >
<title>aa_compute_perms (1,352,625,811 samples, 0.19%)</title><rect x="461.2" y="229" width="2.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="464.16" y="239.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (2,179,619,329 samples, 0.31%)</title><rect x="339.4" y="149" width="3.7" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="342.40" y="159.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (70,293,215 samples, 0.01%)</title><rect x="633.3" y="357" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="636.34" y="367.5" ></text>
</g>
<g >
<title>common_interrupt (61,419,460 samples, 0.01%)</title><rect x="485.9" y="197" width="0.1" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="488.87" y="207.5" ></text>
</g>
<g >
<title>skb_copy_datagram_iter (105,265,304,615 samples, 14.96%)</title><rect x="150.2" y="293" width="176.6" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="153.24" y="303.5" >skb_copy_datagram_iter</text>
</g>
<g >
<title>scheduler_tick (97,973,907 samples, 0.01%)</title><rect x="514.3" y="213" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="517.33" y="223.5" ></text>
</g>
<g >
<title>start_thread (370,365,418,732 samples, 52.65%)</title><rect x="568.7" y="405" width="621.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="571.72" y="415.5" >start_thread</text>
</g>
<g >
<title>do_mq_timedreceive (45,417,844,088 samples, 6.46%)</title><rect x="862.8" y="325" width="76.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="865.80" y="335.5" >do_mq_ti..</text>
</g>
<g >
<title>tick_sched_handle.isra.0 (131,169,707 samples, 0.02%)</title><rect x="325.3" y="117" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="328.29" y="127.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (70,496,577 samples, 0.01%)</title><rect x="802.7" y="325" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="805.73" y="335.5" ></text>
</g>
<g >
<title>schedule (138,284,318 samples, 0.02%)</title><rect x="1035.9" y="309" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1038.85" y="319.5" ></text>
</g>
<g >
<title>x86_pmu_disable (62,409,597 samples, 0.01%)</title><rect x="514.3" y="165" width="0.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="517.33" y="175.5" ></text>
</g>
<g >
<title>skb_free_head (2,059,440,328 samples, 0.29%)</title><rect x="344.3" y="229" width="3.5" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="347.32" y="239.5" ></text>
</g>
<g >
<title>[sniffer] (5,536,673,522 samples, 0.79%)</title><rect x="568.7" y="389" width="9.3" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="571.72" y="399.5" ></text>
</g>
<g >
<title>__schedule (138,284,318 samples, 0.02%)</title><rect x="1035.9" y="293" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1038.85" y="303.5" ></text>
</g>
<g >
<title>tick_sched_timer (97,973,907 samples, 0.01%)</title><rect x="514.3" y="261" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="517.33" y="271.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (241,425,129 samples, 0.03%)</title><rect x="503.0" y="293" width="0.4" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="506.01" y="303.5" ></text>
</g>
<g >
<title>do_syscall_64 (138,987,705,069 samples, 19.76%)</title><rect x="805.0" y="357" width="233.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="807.98" y="367.5" >do_syscall_64</text>
</g>
</g>
</svg>
